{% assign add_to_cart = 'Add to cart' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}

<link rel="stylesheet" href="{{ 'single-product.css' | asset_url }}" type="text/css" media="all" />

<div class="page-container single-product" itemscope itemtype="http://schema.org/Product">
  
  <meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
  <meta itemprop="image" content="{{ product | img_url: 'grande' }}" />

  <div class="back-button">
    <a href="/collections/all" title="Back to shop">{% render 'icon--arrow-left' %} Back to shop</a>
  </div>
  
  <form action="/cart/add" method="post" enctype="multipart/form-data">
    

    {% comment %} 
      LIGHT
    {% endcomment %}
    <div class="left">
      {% if product.images.size == 0 %}
  
        <img src="{{ '' | img_url: 'grande' }}" alt="" />
      
      {% else %}
      
        {% assign featured_image = product.selected_or_first_available_variant.featured_image | default: product.featured_image %}
        <a href="{{ featured_image | img_url: '1024x1024' }}">
          <img src="{{ featured_image | img_url: 'grande' }}" alt="{{ product.title | escape }}" />
        </a>
  
        {% if product.images.size > 1 %}
          <ul>
            {% for image in product.images %}
              <li>
                <a href="{{ image | img_url: '1024x1024' }}">
                  <img src="{{ image | img_url: 'large' }}" alt="{{ image.alt | escape }}" />
                </a>
              </li>
            {% endfor %}
          </ul>
        {% endif %}
      
      {% endif %}
    </div>
    
    {% comment %} 
      RIGHT
    {% endcomment %}
    <div class="right">

      <div class="title">
        <h1>{{ product.title }}</h1>
      </div>
      
      <div class="tags">
        by 
        {% for tag in product.tags %}
          <a href="/collections/{{tag}}">{{ tag }}</a>
        {% endfor %}
      </div>
      
 
      <div class="price" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
        {% if product.available %}
        <link itemprop="availability" href="http://schema.org/InStock" />
        {% else %}
        <link itemprop="availability" href="http://schema.org/OutOfStock" />
        {% endif %}
        <p>
          {% assign variant = product.selected_or_first_available_variant %}
          {% if product.compare_at_price > product.price %}
          <span class="product-price on-sale" itemprop="price">{{ variant.price | money }}</span>
          <s class="product-compare-price">{{ variant.compare_at_price | money }}</s>
          {% else %}
          <span class="product-price" itemprop="price">{{ variant.price | money }}</span>
          {% endif %}
        </p>
      </div>
      
      {% assign hide_default_title = false %}
      {% if product.variants.size == 1 and product.variants.first.title contains 'Default' %}
        {% assign hide_default_title = true %}
      {% endif %}       

      {% if product.has_only_default_variant %}
        <input type="hidden" name="id" value="{{ product.variants.first.id }}">
      {% else %}
        <div class="variants" id="product-variants" class="{% if hide_default_title %} hidden{% endif %}">
          <select id="product-select" name="id">
          {% for variant in product.variants %}
            <option{% if variant == product.selected_or_first_available_variant %} selected{% endif %} value="{{ variant.id }}">
            {{ variant.title }} - {{ variant.price | money }}
            </option>
          {% endfor %}
          </select>
        </div>        
      {% endif %}
        
      <div class="add-to-cart" id="product-add">
        {% if product.available %}
          <input type="submit" name="add" id="add" value="{{ add_to_cart | escape }}">
        {% else %}
          <input disabled style="cursor: default;" type="submit" name="add" id="add" value="{{ sold_out | escape }}">
        {% endif %}
      </div>

      {% if product.metafields.music.tracklisting %}
        <div class="tracklist">
          <h3>Tracklist</h3>
          <ol>
            {% for track in product.metafields.music.tracklisting.value %}
            <li>{{ track }}</li>
            {% endfor %}
          </ol>
        </div>
      {% endif %}

      {% if product.metafields.music.release_date %}
        <div class="release-date">
          <h3>Release Date</h3>
          <span>{{ product.metafields.music.release_date | date: "%B %d, %Y" }}</span>
        </div>
      {% endif %}

    </div>
      
      {% if collection %}
        {% if collection.previous_product or collection.next_product %}
        <div>     
        {% if collection.previous_product %}
          {% capture prev_url %}{{ collection.previous_product}}#content{% endcapture %}
          <span class="left">{{ 'Previous Product' | link_to: prev_url }}</span>
        {% endif %}
        {% if collection.next_product %}
          {% capture next_url %}{{ collection.next_product}}#content{% endcapture %}
          <span class="right">{{ 'Next Product' | link_to: next_url }}</span>
        {% endif %}
        </div>
        {% endif %}
      {% endif %}

  </form>

  <div class="description" itemprop="description">
    <h3>About {{ product.title }}</h3>
    <p>{{ product.description | newline_to_br }}</p>
  </div>

  {% if product.metafields.music.credits != blank %}
    <div class="credits" itemprop="description">
      <h3>Credits</h3>
      <p>{{ product.metafields.music.credits | metafield_tag }}</p>
    </div>
  {% endif %}
  

</div>

<script>
  
var selectCallback = function(variant, selector) {

  if (variant) {
    
    // Swap image.
    if (variant.featured_image) {
      var newImage = variant.featured_image; // New image object.
      var mainImageDomEl = jQuery('.product-photo-container img')[0]; // DOM element of main image we need to swap.
      Shopify.Image.switchImage(newImage, mainImageDomEl, switchImage); // Define switchImage (the callback) in your theme's JavaScript file.
    }
    
    // Selected a valid variant that is available.
    if (variant.available) {
          
      // Enabling add to cart button.
      jQuery('#add').removeClass('disabled').prop('disabled', false).val({{ add_to_cart | json }});
    
      // If item is backordered yet can still be ordered, we'll show special message.
      if (variant.inventory_management && variant.inventory_quantity <= 0) {
        jQuery('#selected-variant').html({{ product.title | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %});
        jQuery('#backorder').removeClass("hidden");
      } else {
        jQuery('#backorder').addClass("hidden");
      }
      
    } else {
      // Variant is sold out.
      jQuery('#backorder').addClass('hidden');
      jQuery('#add').val({{ sold_out | json }}).addClass('disabled').prop('disabled', true);       
    }
    
    // Whether the variant is in stock or not, we can update the price and compare at price.
    if ( variant.compare_at_price > variant.price ) {
      jQuery('#product-price').html('<span class="product-price on-sale">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") +'</span>'+'&nbsp;<s class="product-compare-price">'+Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}")+ '</s>');
    } else {
      jQuery('#product-price').html('<span class="product-price">'+ Shopify.formatMoney(variant.price, "{{ shop.money_format }}") + '</span>' );
    }        

  } else {
    // variant doesn't exist.
    jQuery('#product-price').empty();
    jQuery('#backorder').addClass('hidden');
    jQuery('#add').val({{ unavailable | json }}).addClass('disabled').prop('disabled', true);
  }

};
  
jQuery(function($) {

  new Shopify.OptionSelectors('product-select', { product: {{ product | json }}, onVariantSelected: selectCallback, enableHistoryState: true });
  
  // Add label if only one product option and it isn't 'Title'.
  {% if product.options.size == 1 and product.options.first != 'Title' %}
    $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
  {% endif %}

});

Shopify.Image.preload({{ product.images | json }}, 'grande');
Shopify.Image.preload({{ product.images | json }}, '1024x1024');

</script>